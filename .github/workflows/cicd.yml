name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> .env
          echo "KAKAO_SECRET=${{ secrets.KAKAO_SECRET }}" >> .env
          echo "KAKAO_REDIRECTION_URI=${{ secrets.KAKAO_REDIRECTION_URI }}" >> .env
          echo "SESSION_SECRET_KEY=${{ secrets.SESSION_SECRET_KEY }}" >> .env

      # Build step removed since there is no build script

      - name: Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "."
          target: "/home/ec2-user/your-app-directory"

      - name: Execute remote commands via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            # Install Node.js and pm2 on Amazon Linux
            curl -sL https://rpm.nodesource.com/setup_20.x | sudo bash -
            sudo yum install -y nodejs
            sudo npm install -g pm2
            # Navigate to the application directory
            cd /home/ec2-user/your-app-directory
            # Install project dependencies
            npm install --production
            # Restart or start the application with pm2
            pm2 stop all || true
            pm2 delete all || true
            pm2 restart all || pm2 start bin/www
